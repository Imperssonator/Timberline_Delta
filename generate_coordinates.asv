function [pixelCoord, bonds, type] = generate_coordinates(micstruct,pw,ph)
clc
% This function generates the xy coordinates of all the monomers present,
% list of which monomers are bonded to which and how
% The grid is taken to be in the 4th quadrant (origin top left)

[m, n] = size(micstruct);
coord = [];
pixelCoord = [];
xyFiberSpace = [];                            
% Fiber space is where the axis has been rotated by the angle in which the pi-stack is growing
% xyfiberspace gives the x & y coordinated in the rotated plane
bonds = [];
for i = 1:m
    for j = 1:n
        gridpt = [pw*j ph*-i];                % gives coordinates in space based on position in matrix
        if micstruct(i,j) ~= -180
            theta = micstruct(i,j);           % gives the angle with which axis should be rotated
                                              % needs to be modified when we're dealing with more
                                              % than one angle
            rad = (theta/180)*pi;             % assuming the given angle is in degrees
            pixelCoord = [pixelCoord; gridpt];
            xyFiberSpace = [xyFiberSpace; [(gridpt(1)*cos(rad)+gridpt(2)*sin(rad)) (gridpt(2)*cos(rad)-gridpt(1)*sin(rad))]];
            % xfs = xcos(theta) + ysin(theta)
            % yfs = ycos(theta) - xsin(theta)
        end
    end
end
L = max(xyFiberSpace(:,1)) - min(xyFiberSpace(:,1));        % Length of the pi stack
piStackDistance = 2;                                        % Distance between two pi stacks
stackLength = round(L/piStackDistance);                     % Number of chains in the stack
chainLength = [];
monLength = 2;
store = xyFiberSpace;
for i = 1:length(xyFiberSpace)
    monList = [];
    for j = 1:length(store)
        if xyFiberSpace(i,1) == store(j,1)
            monList = [monList; store(j,:)];         % makes a list of the monomers located at the same length point
            store(j,:) = [];
        end
    end
    chainStart = monList(max(monList(:,2)),:);
    chainEnd = monList(min(monList(:,2)),:);
    if chainStart(2) ~= chainEnd(2)
        chainLength = [chainLength; [((chainStart(2)-chainEnd(2))/monLength)+1  xyFiberSpace(i,1)]];
        % [number of monomers in the chain, length point]
        monPos = 0:monLength:chainLength(1);
        
    else
        chainLength = [chainLength; [1  xyFiberSpace(i,1)]];
    end
    
    for k = 2:length(monPos)-1
        xyFiberSpace = [xyFiberSpace; 
        
    
    % Calculates length of chanin at each length point along the pi stack
end    

% Calculating the distance between the current monomer and every other
% monomer before this

for i = 2:length(pixelCoord)
    d = [];
    for j = 1:i-1
        d(j) = sqrt(((pixelCoord(i,1) - pixelCoord(j,1))^2) + ((pixelCoord(i,2) - pixelCoord(j,2))^2)); 
    end
    if min(d) == monLength                          % Ensures the closest monomer present is bonded to it
        for k = 1:length(d)
            if d(k) == min(d)                       % Detects bonded monomers
                bonds = [bonds;[i k]];              % Adds to list of monomer pairs that are bonded
            end
        end
    end
end
% Array that tells how each monomer pair in bonds is bonded.
% 1- backbone bonding, 2- pi stack
% THIS WORKS ONLY WHEN THE ANGLE IS 90
type = [];
for i = 1:length(bonds)
    if pixelCoord((bonds(i,1)),2) == pixelCoord((bonds(i,2)),2)
        type(i) = 2;
    else
        type(i) = 1;
    end
end
end 